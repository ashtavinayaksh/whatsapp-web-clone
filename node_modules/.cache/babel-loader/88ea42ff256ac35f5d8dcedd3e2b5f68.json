{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Project\\\\WhatsApp-Clone-React-isnotuploaded on github\\\\src\\\\Chat\\\\DrawerRightSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //importing components\n\nimport SearchBar from \"../shared/SearchBar\"; //importing material-ui\n\nimport DrawerRight from \"./DrawerRight\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\"; //importing material-ui-icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DoneIcon from \"@material-ui/icons/Done\"; //importing styles\n\nimport \"./DrawerRightSearch.css\";\n\nfunction DrawerRightSearch({\n  drawerRightSearch,\n  setDrawerRightSearch,\n  messages,\n  user\n}) {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [isFoundMessage, setIsFoundMessage] = useState(false);\n\n  const findMessage = function (myMessages) {\n    return function (x) {\n      var searchMessage = x.message + \"\" + x.caption;\n      return searchMessage.toLowerCase().includes(myMessages.toLowerCase()) || !myMessages;\n    };\n  };\n\n  useEffect(() => {\n    const messageResult = () => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, messages.filter(findMessage(search)).map(message => /*#__PURE__*/React.createElement(\"p\", {\n        key: message.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, message.message, message.caption)));\n    };\n\n    if (search) {\n      var result = messageResult(); // console.log(\"result\", result.props.children)\n\n      if (result.props.children.length > 0) {\n        setIsFoundMessage(true);\n        console.log(\"search message sucess\");\n      } else {\n        setIsFoundMessage(false);\n        console.log(\"search message fail\");\n      }\n    }\n  }, [search, messages]);\n\n  const handleDrawerClose = () => {\n    setDrawerRightSearch(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DrawerRight, {\n    drawerRight: drawerRightSearch,\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drawerRight__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handleDrawerClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Search Messages\")), /*#__PURE__*/React.createElement(SearchBar, {\n      search: search,\n      setSearch: setSearch,\n      placeholder: \"Search...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `drawerRight__content ${isFoundMessage === true && search.length > 0 && \"drawerRight__content_searched\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, search.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, isFoundMessage ? /*#__PURE__*/React.createElement(React.Fragment, null, messages.filter(findMessage(search)).map(message => {\n      var _message$timestamp;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: message.id,\n        className: \"drawerRight__content_searched_message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }\n      }, new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        hour12: true,\n        minute: \"numeric\"\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"last_p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }\n      }, message.uid === user.uid ? /*#__PURE__*/React.createElement(DoneIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 57\n        }\n      }) : null, message.message, message.caption), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 27\n        }\n      }));\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"No message found\")) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Search for messages in this room.\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(DrawerRightSearch, \"Zkb9AAz4VfF37Env+a/dWcjb3Mw=\");\n\n_c = DrawerRightSearch;\nexport default DrawerRightSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerRightSearch\");","map":{"version":3,"sources":["E:/React_Project/WhatsApp-Clone-React-isnotuploaded on github/src/Chat/DrawerRightSearch.js"],"names":["React","useState","useEffect","SearchBar","DrawerRight","IconButton","makeStyles","Divider","CloseIcon","DoneIcon","DrawerRightSearch","drawerRightSearch","setDrawerRightSearch","messages","user","search","setSearch","isFoundMessage","setIsFoundMessage","findMessage","myMessages","x","searchMessage","message","caption","toLowerCase","includes","messageResult","filter","map","id","result","props","children","length","console","log","handleDrawerClose","Date","timestamp","toDate","toLocaleTimeString","hour","hour12","minute","uid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB,C,CACA;;AACA,OAAO,yBAAP;;AAEA,SAASC,iBAAT,CAA2B;AACzBC,EAAAA,iBADyB;AAEzBC,EAAAA,oBAFyB;AAGzBC,EAAAA,QAHyB;AAIzBC,EAAAA;AAJyB,CAA3B,EAKG;AAAA;;AACD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMkB,WAAW,GAAG,UAAUC,UAAV,EAAsB;AACxC,WAAO,UAAUC,CAAV,EAAa;AAClB,UAAIC,aAAa,GAAGD,CAAC,CAACE,OAAF,GAAY,EAAZ,GAAiBF,CAAC,CAACG,OAAvC;AACA,aACEF,aAAa,CAACG,WAAd,GAA4BC,QAA5B,CAAqCN,UAAU,CAACK,WAAX,EAArC,KACA,CAACL,UAFH;AAID,KAND;AAOD,GARD;;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,aAAa,GAAG,MAAM;AAC1B,0BACE,0CACGd,QAAQ,CAACe,MAAT,CAAgBT,WAAW,CAACJ,MAAD,CAA3B,EAAqCc,GAArC,CAA0CN,OAAD,iBACxC;AAAG,QAAA,GAAG,EAAEA,OAAO,CAACO,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,OAAO,CAACA,OADX,EAEGA,OAAO,CAACC,OAFX,CADD,CADH,CADF;AAUD,KAXD;;AAaA,QAAIT,MAAJ,EAAY;AACV,UAAIgB,MAAM,GAAGJ,aAAa,EAA1B,CADU,CAEV;;AACA,UAAII,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AACpChB,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,OAHD,MAGO;AACLlB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF;AACF,GAzBQ,EAyBN,CAACrB,MAAD,EAASF,QAAT,CAzBM,CAAT;;AA2BA,QAAMwB,iBAAiB,GAAG,MAAM;AAC9BzB,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,WAAW,EAAED,iBADf;AAEE,IAAA,OAAO,eACL,uDACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE0B,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF,eAQE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAEtB,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,WAAW,EAAC,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAcE;AACE,MAAA,SAAS,EAAG,wBACVC,cAAc,KAAK,IAAnB,IACAF,MAAM,CAACmB,MAAP,GAAgB,CADhB,IAEA,+BACD,EALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGnB,MAAM,CAACmB,MAAP,GAAgB,CAAhB,gBACC,0CACGjB,cAAc,gBACb,0CACGJ,QAAQ,CAACe,MAAT,CAAgBT,WAAW,CAACJ,MAAD,CAA3B,EAAqCc,GAArC,CAA0CN,OAAD;AAAA;;AAAA,0BACxC;AACE,QAAA,GAAG,EAAEA,OAAO,CAACO,EADf;AAEE,QAAA,SAAS,EAAC,uCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,IAAIQ,IAAJ,uBACCf,OAAO,CAACgB,SADT,uDACC,mBAAmBC,MAAnB,EADD,EAECC,kBAFD,CAEoB,OAFpB,EAE6B;AAC5BC,QAAAA,IAAI,EAAE,SADsB;AAE5BC,QAAAA,MAAM,EAAE,IAFoB;AAG5BC,QAAAA,MAAM,EAAE;AAHoB,OAF7B,CADH,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAJF,eAcE;AAAG,QAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGrB,OAAO,CAACsB,GAAR,KAAgB/B,IAAI,CAAC+B,GAArB,gBAA2B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,GAA0C,IAD7C,EAEGtB,OAAO,CAACA,OAFX,EAGGA,OAAO,CAACC,OAHX,CAdF,eAmBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CADwC;AAAA,KAAzC,CADH,CADa,gBA2Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA5BJ,CADD,gBAiCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAxCJ,CAdF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAmED;;GArHQd,iB;;KAAAA,iB;AAuHT,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//importing components\r\nimport SearchBar from \"../shared/SearchBar\";\r\n//importing material-ui\r\nimport DrawerRight from \"./DrawerRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n//importing material-ui-icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\n//importing styles\r\nimport \"./DrawerRightSearch.css\";\r\n\r\nfunction DrawerRightSearch({\r\n  drawerRightSearch,\r\n  setDrawerRightSearch,\r\n  messages,\r\n  user,\r\n}) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isFoundMessage, setIsFoundMessage] = useState(false);\r\n\r\n  const findMessage = function (myMessages) {\r\n    return function (x) {\r\n      var searchMessage = x.message + \"\" + x.caption;\r\n      return (\r\n        searchMessage.toLowerCase().includes(myMessages.toLowerCase()) ||\r\n        !myMessages\r\n      );\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const messageResult = () => {\r\n      return (\r\n        <>\r\n          {messages.filter(findMessage(search)).map((message) => (\r\n            <p key={message.id}>\r\n              {message.message}\r\n              {message.caption}\r\n            </p>\r\n          ))}\r\n        </>\r\n      );\r\n    };\r\n\r\n    if (search) {\r\n      var result = messageResult();\r\n      // console.log(\"result\", result.props.children)\r\n      if (result.props.children.length > 0) {\r\n        setIsFoundMessage(true);\r\n        console.log(\"search message sucess\");\r\n      } else {\r\n        setIsFoundMessage(false);\r\n        console.log(\"search message fail\");\r\n      }\r\n    }\r\n  }, [search, messages]);\r\n\r\n  const handleDrawerClose = () => {\r\n    setDrawerRightSearch(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DrawerRight\r\n        drawerRight={drawerRightSearch}\r\n        content={\r\n          <>\r\n            <div className=\"drawerRight__header\">\r\n              <IconButton onClick={handleDrawerClose}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <p>Search Messages</p>\r\n            </div>\r\n\r\n            <SearchBar\r\n              search={search}\r\n              setSearch={setSearch}\r\n              placeholder=\"Search...\"\r\n            />\r\n\r\n            <div\r\n              className={`drawerRight__content ${\r\n                isFoundMessage === true &&\r\n                search.length > 0 &&\r\n                \"drawerRight__content_searched\"\r\n              }`}\r\n            >\r\n              {search.length > 0 ? (\r\n                <>\r\n                  {isFoundMessage ? (\r\n                    <>\r\n                      {messages.filter(findMessage(search)).map((message) => (\r\n                        <div\r\n                          key={message.id}\r\n                          className=\"drawerRight__content_searched_message\"\r\n                        >\r\n                          <p>\r\n                            {new Date(\r\n                              message.timestamp?.toDate()\r\n                            ).toLocaleTimeString(\"en-US\", {\r\n                              hour: \"numeric\",\r\n                              hour12: true,\r\n                              minute: \"numeric\",\r\n                            })}\r\n                            <br />\r\n                          </p>\r\n                          <p id=\"last_p\">\r\n                            {message.uid === user.uid ? <DoneIcon /> : null}\r\n                            {message.message}\r\n                            {message.caption}\r\n                          </p>\r\n                          <Divider />\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  ) : (\r\n                    <p>No message found</p>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <p>Search for messages in this room.</p>\r\n              )}\r\n            </div>\r\n          </>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerRightSearch;\r\n"]},"metadata":{},"sourceType":"module"}