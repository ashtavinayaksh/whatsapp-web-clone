{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Project\\\\WhatsApp-Clone-React-isnotuploaded on github\\\\src\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useStateValue } from \"../StateProvider\";\nimport { useHistory, useParams } from \"react-router-dom\"; //importing firebase\n\nimport { storage, firebase } from \"../firebase\";\nimport db from \"../firebase\"; //importing components\n\nimport ChatHeader from \"./ChatHeader\";\nimport ChatBody from \"./ChatBody\";\nimport ChatFooter from \"./ChatFooter\";\nimport ChatLandingScreen from \"./ChatLandingScreen\"; //importing material-ui\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; //importing styles\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Chat.css\";\n\nfunction Chat({\n  isRoomExist\n}) {\n  _s();\n\n  const history = useHistory();\n  const [{\n    user\n  }] = useStateValue();\n  const {\n    roomId\n  } = useParams();\n  const [_roomId, set_RoomId] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomCreatedBy, setRoomCreatedBy] = useState(\"\");\n  const [roomOwner, setRoomOwner] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showLandingScreenPhoto, setShowLandingScreenPhoto] = useState(false);\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\").doc(roomId).onSnapshot(function (doc) {\n        var _doc$data, _doc$data2, _doc$data3, _doc$data4;\n\n        setRoomName((_doc$data = doc.data()) === null || _doc$data === void 0 ? void 0 : _doc$data.name);\n        setRoomCreatedBy((_doc$data2 = doc.data()) === null || _doc$data2 === void 0 ? void 0 : _doc$data2.createdBy);\n        setRoomOwner((_doc$data3 = doc.data()) === null || _doc$data3 === void 0 ? void 0 : _doc$data3.roomOwner);\n        set_RoomId((_doc$data4 = doc.data()) === null || _doc$data4 === void 0 ? void 0 : _doc$data4.id);\n      });\n      db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(function (doc) {\n        setMessages(doc.docs.map(doc => doc.data()));\n        setLoading(true);\n      });\n      setShowLandingScreenPhoto(false);\n    } else {\n      setShowLandingScreenPhoto(true);\n      history.push(\"/\");\n    }\n  }, [roomId, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, roomId ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    roomCreatedBy: roomCreatedBy,\n    roomOwner: roomOwner,\n    roomName: roomName,\n    roomId: roomId,\n    _roomId: _roomId,\n    messages: messages,\n    db: db,\n    history: history,\n    isRoomExist: isRoomExist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, loading ? /*#__PURE__*/React.createElement(ChatBody, {\n    roomCreatedBy: roomCreatedBy,\n    roomOwner: roomOwner,\n    roomId: roomId,\n    messages: messages,\n    user: user,\n    isRoomExist: isRoomExist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__body_loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChatFooter, {\n    roomName: roomName,\n    roomId: roomId,\n    db: db,\n    firebase: firebase,\n    storage: storage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(ChatLandingScreen, {\n    showLandingScreenPhoto: showLandingScreenPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Chat, \"5fqLnfR1QgG+0eup27P5a0pG/ng=\", false, function () {\n  return [useHistory, useStateValue, useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["E:/React_Project/WhatsApp-Clone-React-isnotuploaded on github/src/Chat/Chat.js"],"names":["React","useEffect","useState","useStateValue","useHistory","useParams","storage","firebase","db","ChatHeader","ChatBody","ChatFooter","ChatLandingScreen","CircularProgress","Chat","isRoomExist","history","user","roomId","_roomId","set_RoomId","roomName","setRoomName","roomCreatedBy","setRoomCreatedBy","roomOwner","setRoomOwner","messages","setMessages","loading","setLoading","showLandingScreenPhoto","setShowLandingScreenPhoto","collection","doc","onSnapshot","data","name","createdBy","id","orderBy","docs","map","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n//importing firebase\r\nimport { storage, firebase } from \"../firebase\";\r\nimport db from \"../firebase\";\r\n//importing components\r\nimport ChatHeader from \"./ChatHeader\";\r\nimport ChatBody from \"./ChatBody\";\r\nimport ChatFooter from \"./ChatFooter\";\r\nimport ChatLandingScreen from \"./ChatLandingScreen\";\r\n//importing material-ui\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n//importing styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Chat.css\";\r\n\r\nfunction Chat({ isRoomExist }) {\r\n  const history = useHistory();\r\n  const [{ user }] = useStateValue();\r\n  const { roomId } = useParams();\r\n  const [_roomId, set_RoomId] = useState(\"\");\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [roomCreatedBy, setRoomCreatedBy] = useState(\"\");\r\n  const [roomOwner, setRoomOwner] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showLandingScreenPhoto, setShowLandingScreenPhoto] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot(function (doc) {\r\n          setRoomName(doc.data()?.name);\r\n          setRoomCreatedBy(doc.data()?.createdBy);\r\n          setRoomOwner(doc.data()?.roomOwner);\r\n          set_RoomId(doc.data()?.id);\r\n        });\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot(function (doc) {\r\n          setMessages(doc.docs.map((doc) => doc.data()));\r\n          setLoading(true);\r\n        });\r\n\r\n      setShowLandingScreenPhoto(false);\r\n    } else {\r\n      setShowLandingScreenPhoto(true);\r\n      history.push(\"/\");\r\n    }\r\n  }, [roomId, history]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      {roomId ? (\r\n        <>\r\n          <div>\r\n            <ChatHeader\r\n              roomCreatedBy={roomCreatedBy}\r\n              roomOwner={roomOwner}\r\n              roomName={roomName}\r\n              roomId={roomId}\r\n              _roomId={_roomId}\r\n              messages={messages}\r\n              db={db}\r\n              history={history}\r\n              isRoomExist={isRoomExist}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"chat__body\">\r\n            {loading ? (\r\n              <ChatBody\r\n                roomCreatedBy={roomCreatedBy}\r\n                roomOwner={roomOwner}\r\n                roomId={roomId}\r\n                messages={messages}\r\n                user={user}\r\n                isRoomExist={isRoomExist}\r\n              />\r\n            ) : (\r\n              <div className=\"chat__body_loading\">\r\n                <div>\r\n                  <CircularProgress />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <ChatFooter\r\n              roomName={roomName}\r\n              roomId={roomId}\r\n              db={db}\r\n              firebase={firebase}\r\n              storage={storage}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <ChatLandingScreen showLandingScreenPhoto={showLandingScreenPhoto} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}