{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Project\\\\WhatsApp-Clone-React-isnotuploaded on github\\\\src\\\\Chat\\\\ChatHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from \"../StateProvider\"; //importing components\n\nimport DropdownMenu from \"../shared/DropdownMenu\";\nimport DrawerRightSearch from \"./DrawerRightSearch\";\nimport DrawerRightInfo from \"./DrawerRightInfo\";\nimport TooltipCustom from \"../shared/TooltipCustom\";\nimport { toastInfo } from \"../shared/toastInfo\"; //importing material-ui\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\"; //importing material-ui-icons\n\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"; //importing styles\n\nimport \"./ChatHeader.css\";\n\nfunction ChatHeader({\n  roomCreatedBy,\n  roomOwner,\n  roomName,\n  roomId,\n  _roomId,\n  messages,\n  db,\n  history,\n  isRoomExist\n}) {\n  _s();\n\n  const [{\n    user\n  }] = useStateValue();\n  const [drawerRightSearch, setDrawerRightSearch] = useState(false);\n  const [drawerRightInfo, setDrawerRightInfo] = useState(false);\n  const [menuChat, setMenuChat] = useState(null);\n  const [role, setRole] = useState(\"\");\n  const [showDate, setShowDate] = useState(false);\n  const [isLastMessage, setIsLastMessage] = useState(false);\n  useEffect(() => {\n    var _messages;\n\n    const errorAbout = \"errorAbout\";\n\n    if (user.uid) {\n      db.collection(\"users\").doc(user.uid).get().then(function (doc) {\n        if (doc.exists) {\n          setRole(doc.data().role);\n        }\n      }).catch(function (error) {\n        toastInfo(`${error}`, errorAbout, \"top-center\");\n      });\n    }\n\n    if ((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : _messages.timestamp) {\n      setShowDate(true);\n    } else {\n      setShowDate(false);\n    }\n\n    if (messages[messages.length - 1]) {\n      setIsLastMessage(true);\n    } else {\n      setIsLastMessage(false);\n    } //listens when room is changed, then it closes DrawerRight\n\n\n    if (isRoomExist >= 0) {\n      setDrawerRightInfo(false);\n      setDrawerRightSearch(false);\n    }\n  }, [user.uid, user.displayName, user.isAnonymous, db, messages, roomId]);\n  console.log(\"ROOOM ID\", roomId);\n  console.log(\"__ROOOM ID\", _roomId);\n\n  const getDateFromMessage = () => {\n    var _messages2, _messages2$timestamp;\n\n    return new Date((_messages2 = messages[messages.length - 1]) === null || _messages2 === void 0 ? void 0 : (_messages2$timestamp = _messages2.timestamp) === null || _messages2$timestamp === void 0 ? void 0 : _messages2$timestamp.toDate()).toLocaleTimeString([], {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      hour12: true,\n      minute: \"numeric\"\n    });\n  };\n\n  const getDateLocal = () => {\n    return new Date().toLocaleTimeString([], {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      hour12: true,\n      minute: \"numeric\"\n    });\n  };\n\n  const searchMessage = () => {\n    setDrawerRightSearch(true);\n  };\n\n  const contactInfo = () => {\n    setDrawerRightInfo(true);\n    setMenuChat(null);\n  };\n\n  const selectMessages = () => {\n    const selectMessages = \"selectMessages\";\n    toastInfo(\"Select Messages is not yet  available!\", selectMessages, \"top-center\");\n  };\n\n  const muteNotifications = () => {\n    const muteNotifications = \"muteNotifications\";\n    toastInfo(\"Mute Notifications is not yet available!\", muteNotifications, \"top-center\");\n  };\n\n  const clearMessages = () => {\n    const clearMessages = \"clearMessages\";\n    toastInfo(\"Clear Messages is not yet available!\", clearMessages, \"top-center\");\n  };\n\n  const deleteRoom = () => {\n    const roomDeleted = \"roomDeleted\";\n\n    if (roomOwner === user.uid || role === \"admin\") {\n      db.collection(\"rooms\").doc(roomId).delete().then(function () {\n        toastInfo(\"Room successfully deleted!\", roomDeleted, \"top-center\");\n      }).catch(function (error) {\n        toastInfo(`Error removing room! ${error}`, roomDeleted, \"top-center\");\n      });\n      history.push(\"/\");\n    } else {\n      toastInfo(`You are not allowed to delete room ${roomName}. Only the admin or room owner ${roomCreatedBy}`, roomDeleted, \"top-center\");\n    }\n  };\n\n  const handleMenuClose = () => {\n    setMenuChat(null);\n  };\n\n  const handleMenuOpen = event => {\n    setMenuChat(event.currentTarget);\n  };\n\n  const menuChatLists = [{\n    title: \"Contact info\",\n    onClick: () => contactInfo(),\n    id: Math.random() * 100000\n  }, {\n    title: \"Select messages\",\n    onClick: () => selectMessages(),\n    id: Math.random() * 100000\n  }, {\n    title: \"Mute notifications\",\n    onClick: () => muteNotifications(),\n    id: Math.random() * 100000\n  }, {\n    title: \"Clear messages\",\n    onClick: () => clearMessages(),\n    id: Math.random() * 100000\n  }, {\n    title: \"Delete Room\",\n    onClick: () => deleteRoom(),\n    id: Math.random() * 100000\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DrawerRightSearch, {\n    drawerRightSearch: drawerRightSearch,\n    setDrawerRightSearch: setDrawerRightSearch,\n    roomId: roomId,\n    messages: messages,\n    db: db,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DrawerRightInfo, {\n    drawerRightInfo: drawerRightInfo,\n    setDrawerRightInfo: setDrawerRightInfo,\n    roomId: roomId,\n    messages: messages,\n    db: db,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__back_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, roomName[0]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, roomName), /*#__PURE__*/React.createElement(Hidden, {\n    only: [\"xs\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, isLastMessage ? /*#__PURE__*/React.createElement(React.Fragment, null, showDate ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Last seen \", getDateFromMessage()) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"Last seen \", getDateLocal())) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TooltipCustom, {\n    name: \"Search\",\n    icon: /*#__PURE__*/React.createElement(SearchOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }),\n    onClick: searchMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TooltipCustom, {\n    name: \"Menu\",\n    icon: /*#__PURE__*/React.createElement(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }),\n    onClick: handleMenuOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DropdownMenu, {\n    menuLists: menuChatLists,\n    menu: menuChat,\n    handleMenuOpen: handleMenuOpen,\n    handleMenuClose: handleMenuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(ChatHeader, \"HiHiE1Ni5wgr3bgSPkO+IY539H4=\", false, function () {\n  return [useStateValue];\n});\n\n_c = ChatHeader;\nexport default ChatHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatHeader\");","map":{"version":3,"sources":["E:/React_Project/WhatsApp-Clone-React-isnotuploaded on github/src/Chat/ChatHeader.js"],"names":["React","useEffect","useState","Link","useStateValue","DropdownMenu","DrawerRightSearch","DrawerRightInfo","TooltipCustom","toastInfo","Hidden","Avatar","IconButton","SearchOutlinedIcon","ArrowBackIcon","MoreVertIcon","ChatHeader","roomCreatedBy","roomOwner","roomName","roomId","_roomId","messages","db","history","isRoomExist","user","drawerRightSearch","setDrawerRightSearch","drawerRightInfo","setDrawerRightInfo","menuChat","setMenuChat","role","setRole","showDate","setShowDate","isLastMessage","setIsLastMessage","errorAbout","uid","collection","doc","get","then","exists","data","catch","error","length","timestamp","displayName","isAnonymous","console","log","getDateFromMessage","Date","toDate","toLocaleTimeString","weekday","year","month","day","hour","hour12","minute","getDateLocal","searchMessage","contactInfo","selectMessages","muteNotifications","clearMessages","deleteRoom","roomDeleted","delete","push","handleMenuClose","handleMenuOpen","event","currentTarget","menuChatLists","title","onClick","id","Math","random"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n//importing components\r\nimport DropdownMenu from \"../shared/DropdownMenu\";\r\nimport DrawerRightSearch from \"./DrawerRightSearch\";\r\nimport DrawerRightInfo from \"./DrawerRightInfo\";\r\nimport TooltipCustom from \"../shared/TooltipCustom\";\r\nimport { toastInfo } from \"../shared/toastInfo\";\r\n//importing material-ui\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//importing material-ui-icons\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n//importing styles\r\nimport \"./ChatHeader.css\";\r\n\r\nfunction ChatHeader({\r\n  roomCreatedBy,\r\n  roomOwner,\r\n  roomName,\r\n  roomId,\r\n  _roomId,\r\n  messages,\r\n  db,\r\n  history,\r\n  isRoomExist,\r\n}) {\r\n  const [{ user }] = useStateValue();\r\n  const [drawerRightSearch, setDrawerRightSearch] = useState(false);\r\n  const [drawerRightInfo, setDrawerRightInfo] = useState(false);\r\n  const [menuChat, setMenuChat] = useState(null);\r\n  const [role, setRole] = useState(\"\");\r\n  const [showDate, setShowDate] = useState(false);\r\n  const [isLastMessage, setIsLastMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const errorAbout = \"errorAbout\";\r\n    if (user.uid) {\r\n      db.collection(\"users\")\r\n        .doc(user.uid)\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc.exists) {\r\n            setRole(doc.data().role);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          toastInfo(`${error}`, errorAbout, \"top-center\");\r\n        });\r\n    }\r\n\r\n    if (messages[messages.length - 1]?.timestamp) {\r\n      setShowDate(true);\r\n    } else {\r\n      setShowDate(false);\r\n    }\r\n\r\n    if (messages[messages.length - 1]) {\r\n      setIsLastMessage(true);\r\n    } else {\r\n      setIsLastMessage(false);\r\n    }\r\n\r\n    //listens when room is changed, then it closes DrawerRight\r\n    if (isRoomExist >= 0) {\r\n      setDrawerRightInfo(false);\r\n      setDrawerRightSearch(false);\r\n    }\r\n  }, [user.uid, user.displayName, user.isAnonymous, db, messages, roomId]);\r\n\r\n  console.log(\"ROOOM ID\", roomId);\r\n  console.log(\"__ROOOM ID\", _roomId);\r\n\r\n  const getDateFromMessage = () => {\r\n    return new Date(\r\n      messages[messages.length - 1]?.timestamp?.toDate()\r\n    ).toLocaleTimeString([], {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      hour12: true,\r\n      minute: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const getDateLocal = () => {\r\n    return new Date().toLocaleTimeString([], {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      hour12: true,\r\n      minute: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const searchMessage = () => {\r\n    setDrawerRightSearch(true);\r\n  };\r\n\r\n  const contactInfo = () => {\r\n    setDrawerRightInfo(true);\r\n    setMenuChat(null);\r\n  };\r\n\r\n  const selectMessages = () => {\r\n    const selectMessages = \"selectMessages\";\r\n    toastInfo(\r\n      \"Select Messages is not yet  available!\",\r\n      selectMessages,\r\n      \"top-center\"\r\n    );\r\n  };\r\n\r\n  const muteNotifications = () => {\r\n    const muteNotifications = \"muteNotifications\";\r\n    toastInfo(\r\n      \"Mute Notifications is not yet available!\",\r\n      muteNotifications,\r\n      \"top-center\"\r\n    );\r\n  };\r\n\r\n  const clearMessages = () => {\r\n    const clearMessages = \"clearMessages\";\r\n    toastInfo(\r\n      \"Clear Messages is not yet available!\",\r\n      clearMessages,\r\n      \"top-center\"\r\n    );\r\n  };\r\n\r\n  const deleteRoom = () => {\r\n    const roomDeleted = \"roomDeleted\";\r\n\r\n    if (roomOwner === user.uid || role === \"admin\") {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .delete()\r\n        .then(function () {\r\n          toastInfo(\"Room successfully deleted!\", roomDeleted, \"top-center\");\r\n        })\r\n        .catch(function (error) {\r\n          toastInfo(`Error removing room! ${error}`, roomDeleted, \"top-center\");\r\n        });\r\n      history.push(\"/\");\r\n    } else {\r\n      toastInfo(\r\n        `You are not allowed to delete room ${roomName}. Only the admin or room owner ${roomCreatedBy}`,\r\n        roomDeleted,\r\n        \"top-center\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setMenuChat(null);\r\n  };\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setMenuChat(event.currentTarget);\r\n  };\r\n\r\n  const menuChatLists = [\r\n    {\r\n      title: \"Contact info\",\r\n      onClick: () => contactInfo(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Select messages\",\r\n      onClick: () => selectMessages(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Mute notifications\",\r\n      onClick: () => muteNotifications(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Clear messages\",\r\n      onClick: () => clearMessages(),\r\n      id: Math.random() * 100000,\r\n    },\r\n    {\r\n      title: \"Delete Room\",\r\n      onClick: () => deleteRoom(),\r\n      id: Math.random() * 100000,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"chat__header\">\r\n      <DrawerRightSearch\r\n        drawerRightSearch={drawerRightSearch}\r\n        setDrawerRightSearch={setDrawerRightSearch}\r\n        roomId={roomId}\r\n        messages={messages}\r\n        db={db}\r\n        user={user}\r\n      />\r\n\r\n      <DrawerRightInfo\r\n        drawerRightInfo={drawerRightInfo}\r\n        setDrawerRightInfo={setDrawerRightInfo}\r\n        roomId={roomId}\r\n        messages={messages}\r\n        db={db}\r\n        user={user}\r\n      />\r\n\r\n      <Hidden smUp>\r\n        <Link to=\"/\">\r\n          <div className=\"chat__back_button\">\r\n            <IconButton>\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Link>\r\n      </Hidden>\r\n\r\n      <Avatar>{roomName[0]}</Avatar>\r\n      <div className=\"chat__headerInfo\">\r\n        <h3>{roomName}</h3>\r\n        <Hidden only={[\"xs\"]}>\r\n          {isLastMessage ? (\r\n            <>\r\n              {showDate ? (\r\n                <p>Last seen {getDateFromMessage()}</p>\r\n              ) : (\r\n                <p>Last seen {getDateLocal()}</p>\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </Hidden>\r\n      </div>\r\n\r\n      <div className=\"chat__headerRight\">\r\n        <TooltipCustom\r\n          name=\"Search\"\r\n          icon={<SearchOutlinedIcon />}\r\n          onClick={searchMessage}\r\n        />\r\n        <TooltipCustom\r\n          name=\"Menu\"\r\n          icon={<MoreVertIcon />}\r\n          onClick={handleMenuOpen}\r\n        />\r\n        <DropdownMenu\r\n          menuLists={menuChatLists}\r\n          menu={menuChat}\r\n          handleMenuOpen={handleMenuOpen}\r\n          handleMenuClose={handleMenuClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n"]},"metadata":{},"sourceType":"module"}